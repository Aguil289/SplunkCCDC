#!/usr/bin/env bash
#
# MWCCDC 2025 – Unified Splunk Universal Forwarder installer
#
# Usage (non-interactive):
#   ./ccdc-uf.sh                           # uses 172.20.241.20:9997
#   ./ccdc-uf.sh 172.20.241.20             # still uses 9997
#   ./ccdc-uf.sh 172.20.242.20 9997        # only if packet/inject says indexer is .242.20
#   ./ccdc-uf.sh 172.20.241.20 9997 admin 'StrongPass!'
#

# ---------- TEAM PACKET DEFAULTS ----------
PACKET_INDEXER_IP="172.20.241.20"    
PACKET_INDEXER_PORT="9997"          
DEFAULT_ADMIN_USERNAME="admin"
DEFAULT_ADMIN_PASSWORD="Changeme123!"   # change after install

INDEXER_IP="${1:-$PACKET_INDEXER_IP}"
INDEXER_PORT="${2:-$PACKET_INDEXER_PORT}"
ADMIN_USERNAME="${3:-$DEFAULT_ADMIN_USERNAME}"
ADMIN_PASSWORD="${4:-$DEFAULT_ADMIN_PASSWORD}"

INSTALL_DIR="/opt/splunkforwarder"

# If CCDC gives you a Nextcloud/HTTP drop for UF, put it here:
# Example: INTERNAL_BASE_URL="http://172.20.241.10/team01/splunk/uf/10.0.1/"
INTERNAL_BASE_URL=""

SPLUNK_VERSION="9.1.1"
SPLUNK_BUILD="c486717c322b"
SPLUNK_TGZ_NAME="splunkforwarder-${SPLUNK_VERSION}-${SPLUNK_BUILD}-linux-amd64.tgz"
SPLUNK_PUBLIC_URL="https://download.splunk.com/products/universalforwarder/releases/${SPLUNK_VERSION}/linux/${SPLUNK_TGZ_NAME}"

# ---------- COLORS ----------
RED=$'\e[0;31m'; GREEN=$'\e[0;32m'; YELLOW=$'\e[0;33m'; BLUE=$'\e[0;34m'; CYAN=$'\e[0;36m'; NC=$'\e[0m'

echo_msg() {
  echo ""
  echo -e "${CYAN}==============================================${NC}"
  echo -e "\033[1;33m$1\033[0m"
  echo -e "${CYAN}==============================================${NC}"
  echo ""
}

install_dependencies() {
  echo "${BLUE}Checking for required dependencies...${NC}"
  local PKG=""
  if command -v apt-get >/dev/null 2>&1; then
    PKG="apt-get"
  elif command -v dnf >/dev/null 2>&1; then
    PKG="dnf"
  elif command -v yum >/dev/null 2>&1; then
    PKG="yum"
  else
    echo "${RED}No apt-get/dnf/yum. Install wget tar acl manually.${NC}"
    return 1
  fi
  local req=(wget tar setfacl)
  for c in "${req[@]}"; do
    if ! command -v "$c" >/dev/null 2>&1; then
      echo "${YELLOW}Installing $c...${NC}"
      if [ "$PKG" = "apt-get" ]; then
        sudo DEBIAN_FRONTEND=noninteractive $PKG install -y "$c"
      else
        sudo $PKG install -y "$c"
      fi
    fi
  done
}

create_splunk_user() {
  if ! id -u splunk >/dev/null 2>&1; then
    sudo groupadd splunk 2>/dev/null || true
    sudo useradd -r -g splunk -d "$INSTALL_DIR" splunk 2>/dev/null || true
  fi
}

download_uf_tgz() {
  local target="$SPLUNK_TGZ_NAME"
  local max_retries=3
  local i=0
  if [ -n "$INTERNAL_BASE_URL" ]; then
    local int_url="${INTERNAL_BASE_URL}${SPLUNK_TGZ_NAME}"
    echo "${BLUE}Trying internal UF URL: $int_url${NC}"
    if wget -O "$target" "$int_url"; then
      echo "${GREEN}Downloaded from internal source.${NC}"
      return 0
    else
      echo "${YELLOW}Internal source failed, trying public.${NC}"
    fi
  fi
  while [ $i -lt $max_retries ]; do
    if [ $i -eq 0 ]; then
      wget -O "$target" "$SPLUNK_PUBLIC_URL" && return 0
    else
      wget --no-check-certificate -O "$target" "$SPLUNK_PUBLIC_URL" && return 0
    fi
    i=$((i+1))
    echo "${RED}Download failed ($i/$max_retries).${NC}"
    sleep 4
  done
  return 1
}

install_splunk_tgz() {
  echo "${BLUE}Installing Splunk UF to ${INSTALL_DIR}...${NC}"
  sudo mkdir -p /opt
  sudo tar -xvzf "$SPLUNK_TGZ_NAME" -C /opt
  create_splunk_user
  sudo chown -R splunk:splunk "$INSTALL_DIR"
}

seed_admin() {
  local seed="$INSTALL_DIR/etc/system/local/user-seed.conf"
  sudo mkdir -p "$(dirname "$seed")"
  sudo bash -c "cat > '$seed'" <<EOF
[user_info]
USERNAME = $ADMIN_USERNAME
PASSWORD = $ADMIN_PASSWORD
EOF
  sudo chown splunk:splunk "$seed"
}

enable_and_start() {
  sudo "$INSTALL_DIR/bin/splunk" start --accept-license --answer-yes --no-prompt
  sudo "$INSTALL_DIR/bin/splunk" enable boot-start
  if systemctl list-unit-files | grep -qi splunkforwarder; then
    sudo systemctl enable --now SplunkForwarder 2>/dev/null || true
  fi
}

configure_forwarding_and_monitors() {
  # hard rule: 9997 unless packet says otherwise
  local dest="${INDEXER_IP}:${PACKET_INDEXER_PORT}"
  echo "${BLUE}Pointing forwarder at ${dest} (packet rule).${NC}"
  sudo "$INSTALL_DIR/bin/splunk" add forward-server "$dest" -auth "${ADMIN_USERNAME}:${ADMIN_PASSWORD}"
  # common linux logs; missing files are OK
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/syslog 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/auth.log 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/secure 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/messages 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" list forward-server
  sudo "$INSTALL_DIR/bin/splunk" restart
}

linux_full_auto() {
  if [ "$EUID" -ne 0 ]; then
    echo "${RED}Run as root/sudo.${NC}"
    exit 1
  fi
  install_dependencies
  if [ -d "$INSTALL_DIR" ]; then
    echo "${YELLOW}UF already installed at $INSTALL_DIR. Exiting.${NC}"
    exit 0
  fi
  if ! download_uf_tgz; then
    echo "${RED}Could not download UF from internal or public. Stop.${NC}"
    exit 1
  fi
  install_splunk_tgz
  seed_admin
  enable_and_start
  configure_forwarding_and_monitors
  echo "CCDC UF test $(date)" | sudo tee /tmp/test.log >/dev/null
  sudo setfacl -m u:splunk:r /tmp/test.log 2>/dev/null || true
  echo "${GREEN}Linux UF install complete and pointed at ${INDEXER_IP}:${PACKET_INDEXER_PORT}.${NC}"
}

print_windows_instructions() {
  echo_msg "Windows UF install (packet is authoritative, port 9997)"
  cat <<'EOW'
# Run in elevated PowerShell on the Windows VM
# Use the MSI from your CCDC Nextcloud/share. Do NOT pull random internet MSI during the event.
$msi = "splunkforwarder-10.0.1-x64.msi"     # adjust to actual filename from share
$idx = "172.20.241.20:9997"
Start-Process msiexec.exe -ArgumentList "/i `"$msi`" AGREETOLICENSE=Yes /qn" -Wait
& "C:\Program Files\SplunkUniversalForwarder\bin\splunk.exe" start --accept-license --answer-yes
& "C:\Program Files\SplunkUniversalForwarder\bin\splunk.exe" add forward-server $idx
& "C:\Program Files\SplunkUniversalForwarder\bin\splunk.exe" add monitor C:\Windows\System32\winevt\Logs\Security.evtx
& "C:\Program Files\SplunkUniversalForwarder\bin\splunk.exe" list forward-server
EOW
}

main_menu() {
  echo -e "${BLUE}_________________________________________________________${NC}"
  echo -e "${BLUE}Splunk UF install – CCDC 2025${NC}"
  echo ""
  echo -e "  1. ${CYAN}Windows (print PS instructions)${NC}"
  echo -e "  2. ${CYAN}Linux (auto install, point to packet IP, port 9997)${NC}"
  echo -e "  3. ${CYAN}Mac (manual)${NC}"
  echo -e "  4. ${CYAN}FreeBSD (manual)${NC}"
  echo ""
  read -n1 -p "  Enter choice (1-4): " choice
  echo ""
  case "$choice" in
    1) print_windows_instructions ;;
    2) linux_full_auto ;;
    3)
      echo_msg "Mac UF quick steps (packet rule: 9997)"
      echo "1) Get mac UF from CCDC share."
      echo "2) sudo /opt/splunkforwarder/bin/splunk start --accept-license"
      echo "3) sudo /opt/splunkforwarder/bin/splunk enable boot-start"
      echo "4) sudo /opt/splunkforwarder/bin/splunk add forward-server ${PACKET_INDEXER_IP}:${PACKET_INDEXER_PORT}"
      echo "5) sudo /opt/splunkforwarder/bin/splunk add monitor /var/log/system.log"
      ;;
    4)
      echo_msg "FreeBSD UF quick steps (packet rule: 9997)"
      echo "1) pkg add splunkforwarder.txz (from share)"
      echo "2) /opt/splunkforwarder/bin/splunk start --accept-license"
      echo "3) /opt/splunkforwarder/bin/splunk add forward-server ${PACKET_INDEXER_IP}:${PACKET_INDEXER_PORT}"
      echo "4) /opt/splunkforwarder/bin/splunk add monitor /var/log/auth.log"
      ;;
    *)
      echo "${RED}Invalid.${NC}"; exit 1 ;;
  esac
}

main_menu
