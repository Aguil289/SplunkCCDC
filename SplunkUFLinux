#!/usr/bin/env bash
#
# MWCCDC 2025 – Splunk Universal Forwarder installer 
# Usage:
#   ./ccdc-uf.sh
#   ./ccdc-uf.sh 172.20.241.20          # still 9997
#   ./ccdc-uf.sh 172.20.242.20 9997     # only if White/Gold says so
#   ./ccdc-uf.sh 172.20.241.20 9997 admin 'StrongPass!'
#

# ---------- TEAM PACKET DEFAULTS ----------
PACKET_INDEXER_IP="172.20.242.20"
PACKET_INDEXER_PORT="9997"

DEFAULT_ADMIN_USERNAME="admin"
DEFAULT_ADMIN_PASSWORD="Changeme123!"   # change after install

INDEXER_IP="${1:-$PACKET_INDEXER_IP}"
# port is forced to packet value unless you override with arg 2
INDEXER_PORT="${2:-$PACKET_INDEXER_PORT}"
ADMIN_USERNAME="${3:-$DEFAULT_ADMIN_USERNAME}"
ADMIN_PASSWORD="${4:-$DEFAULT_ADMIN_PASSWORD}"

INSTALL_DIR="/opt/splunkforwarder"

# If CCDC gives you Nextcloud/HTTP for UF, put it here. This will be tried first.
# Example: INTERNAL_BASE_URL="http://172.20.241.10/team01/splunk/uf/9.1.10/"
INTERNAL_BASE_URL=""

# ---------- SPLUNK UF 9.1.10 (your links) ----------
# Windows MSI
WIN_MSI_NAME="splunkforwarder-9.1.10-a6ea9b30f817-x64-release.msi"
WIN_MSI_URL="https://download.splunk.com/products/universalforwarder/releases/9.1.10/windows/${WIN_MSI_NAME}"

# Linux DEB (Ubuntu/Debian)
LIN_DEB_NAME="splunkforwarder-9.1.10-a6ea9b30f817-linux-2.6-amd64.deb"
LIN_DEB_URL="https://download.splunk.com/products/universalforwarder/releases/9.1.10/linux/${LIN_DEB_NAME}"

# Linux RPM (Oracle/RHEL/CentOS/Fedora)
LIN_RPM_NAME="splunkforwarder-9.1.10-a6ea9b30f817.x86_64.rpm"
LIN_RPM_URL="https://download.splunk.com/products/universalforwarder/releases/9.1.10/linux/${LIN_RPM_NAME}"

# Linux TGZ (fallback)
LIN_TGZ_NAME="splunkforwarder-9.1.10-a6ea9b30f817-Linux-x86_64.tgz"
LIN_TGZ_URL="https://download.splunk.com/products/universalforwarder/releases/9.1.10/linux/${LIN_TGZ_NAME}"

# ---------- COLORS ----------
RED=$'\e[0;31m'; GREEN=$'\e[0;32m'; YELLOW=$'\e[0;33m'; BLUE=$'\e[0;34m'; CYAN=$'\e[0;36m'; NC=$'\e[0m'

echo_msg() {
  echo ""
  echo -e "${CYAN}==============================================${NC}"
  echo -e "\033[1;33m$1\033[0m"
  echo -e "${CYAN}==============================================${NC}"
  echo ""
}

install_dependencies() {
  echo "${BLUE}Checking for required dependencies...${NC}"
  local PKG=""
  if command -v apt-get >/dev/null 2>&1; then
    PKG="apt-get"
  elif command -v dnf >/dev/null 2>&1; then
    PKG="dnf"
  elif command -v yum >/dev/null 2>&1; then
    PKG="yum"
  else
    echo "${RED}No apt-get/dnf/yum. Install wget tar acl manually.${NC}"
    return 1
  fi
  local req=(wget tar setfacl)
  for c in "${req[@]}"; do
    if ! command -v "$c" >/dev/null 2>&1; then
      echo "${YELLOW}Installing $c...${NC}"
      if [ "$PKG" = "apt-get" ]; then
        sudo DEBIAN_FRONTEND=noninteractive $PKG install -y "$c"
      else
        sudo $PKG install -y "$c"
      fi
    fi
  done
}

create_splunk_user() {
  if ! id -u splunk >/dev/null 2>&1; then
    sudo groupadd splunk 2>/dev/null || true
    sudo useradd -r -g splunk -d "$INSTALL_DIR" splunk 2>/dev/null || true
  fi
}

# ----- LINUX DOWNLOAD HELPERS -----
download_linux_deb() {
  local target="$LIN_DEB_NAME"
  if [ -n "$INTERNAL_BASE_URL" ]; then
    wget -O "$target" "${INTERNAL_BASE_URL}${LIN_DEB_NAME}" && return 0
  fi
  wget -O "$target" "$LIN_DEB_URL"
}

download_linux_rpm() {
  local target="$LIN_RPM_NAME"
  if [ -n "$INTERNAL_BASE_URL" ]; then
    wget -O "$target" "${INTERNAL_BASE_URL}${LIN_RPM_NAME}" && return 0
  fi
  wget -O "$target" "$LIN_RPM_URL"
}

download_linux_tgz() {
  local target="$LIN_TGZ_NAME"
  if [ -n "$INTERNAL_BASE_URL" ]; then
    wget -O "$target" "${INTERNAL_BASE_URL}${LIN_TGZ_NAME}" && return 0
  fi
  wget -O "$target" "$LIN_TGZ_URL"
}

# ----- LINUX INSTALL -----
linux_full_auto() {
  if [ "$EUID" -ne 0 ]; then
    echo "${RED}Run as root/sudo.${NC}"
    exit 1
  fi
  install_dependencies
  if [ -d "$INSTALL_DIR" ]; then
    echo "${YELLOW}UF already installed at $INSTALL_DIR. Exiting.${NC}"
    exit 0
  fi

  # detect family
  local use_deb=0
  if [ -f /etc/os-release ]; then
    . /etc/os-release
    case "$ID" in
      ubuntu|debian) use_deb=1 ;;
      *) use_deb=0 ;;
    esac
  fi

  if [ $use_deb -eq 1 ]; then
    echo "${BLUE}Debian/Ubuntu detected. Fetching DEB...${NC}"
    if ! download_linux_deb; then
      echo "${RED}DEB download failed. Trying TGZ...${NC}"
      download_linux_tgz || { echo "${RED}All downloads failed.${NC}"; exit 1; }
      sudo mkdir -p /opt
      sudo tar -xvzf "$LIN_TGZ_NAME" -C /opt
    else
      sudo dpkg -i "$LIN_DEB_NAME" || sudo apt -f install -y
    fi
  else
    echo "${BLUE}RPM-based detected. Fetching RPM...${NC}"
    if ! download_linux_rpm; then
      echo "${RED}RPM download failed. Trying TGZ...${NC}"
      download_linux_tgz || { echo "${RED}All downloads failed.${NC}"; exit 1; }
      sudo mkdir -p /opt
      sudo tar -xvzf "$LIN_TGZ_NAME" -C /opt
    else
      sudo rpm -i "$LIN_RPM_NAME"
    fi
  fi

  create_splunk_user
  sudo chown -R splunk:splunk "$INSTALL_DIR"

  # seed admin
  local seed="$INSTALL_DIR/etc/system/local/user-seed.conf"
  sudo mkdir -p "$(dirname "$seed")"
  sudo bash -c "cat > '$seed'" <<EOF
[user_info]
USERNAME = $ADMIN_USERNAME
PASSWORD = $ADMIN_PASSWORD
EOF
  sudo chown splunk:splunk "$seed"

  # start and enable
  sudo "$INSTALL_DIR/bin/splunk" start --accept-license --answer-yes --no-prompt
  sudo "$INSTALL_DIR/bin/splunk" enable boot-start
  if systemctl list-unit-files | grep -qi splunkforwarder; then
    sudo systemctl enable --now SplunkForwarder 2>/dev/null || true
  fi

  # forward and monitors (packet: 9997)
  local dest="${INDEXER_IP}:${PACKET_INDEXER_PORT}"
  echo "${BLUE}Pointing forwarder at ${dest}${NC}"
  sudo "$INSTALL_DIR/bin/splunk" add forward-server "$dest" -auth "${ADMIN_USERNAME}:${ADMIN_PASSWORD}"

  # common linux logs (some will 404, ok)
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/syslog 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/auth.log 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/secure 2>/dev/null || true
  sudo "$INSTALL_DIR/bin/splunk" add monitor /var/log/messages 2>/dev/null || true

  sudo "$INSTALL_DIR/bin/splunk" list forward-server
  sudo "$INSTALL_DIR/bin/splunk" restart

  echo "CCDC UF test $(date)" | sudo tee /tmp/test.log >/dev/null
  sudo setfacl -m u:splunk:r /tmp/test.log 2>/dev/null || true
  echo "${GREEN}Linux UF install complete and pointed at ${dest}.${NC}"
}

# ----- WINDOWS SECTION -----
print_windows_instructions() {
  echo_msg "Windows UF (9.1.10) – run this in elevated PowerShell on the Windows VM"
  cat <<EOW
# Download UF 9.1.10 MSI from Splunk
wget -O ${WIN_MSI_NAME} "${WIN_MSI_URL}"

# Install silently, accept license
Start-Process msiexec.exe -ArgumentList "/i `"$PWD\\${WIN_MSI_NAME}`" AGREETOLICENSE=Yes /qn" -Wait

# Point to packet indexer 172.20.241.20:9997
& "C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk.exe" start --accept-license --answer-yes
& "C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk.exe" add forward-server ${PACKET_INDEXER_IP}:${PACKET_INDEXER_PORT}
& "C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk.exe" add monitor C:\\Windows\\System32\\winevt\\Logs\\Security.evtx
& "C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk.exe" list forward-server
EOW
}

# ----- MENU (packet machines only) -----
main_menu() {
  echo -e "${BLUE}_________________________________________________________${NC}"
  echo -e "${BLUE}Splunk UF install – CCDC 2025 (packet machines)${NC}"
  echo ""
  echo -e "  1. ${CYAN}Windows (print PS/wget for 9.1.10)${NC}"
  echo -e "  2. ${CYAN}Linux (auto detect deb/rpm; point to 172.20.241.20:9997)${NC}"
  echo ""
  read -n1 -p "  Enter choice (1-2): " choice
  echo ""
  case "$choice" in
    1) print_windows_instructions ;;
    2) linux_full_auto ;;
    *) echo "${RED}Invalid.${NC}"; exit 1 ;;
  esac
}

main_menu
