#!/usr/bin/env bash
# harden-oracle9-splunk-ccdc-openweb.sh
# Splunk-only hardening but DO NOT BLOCK/RESTRICT IPs.
# Splunk Web (8000) is left reachable by any IP (no drop rules).
# Run as root.

set -euo pipefail
IFS=$'\n\t'

# ---------------------- EDIT THESE ----------------------
SPLUNK_HOME="/opt/splunk"
SPLUNK_USER="splunk"
SPLUNK_GROUP="splunk"

# If you want to allow specific admin nets for local mgmt later, set them here (not required)
ADMIN_NETS=()    # e.g. ("172.20.5.0/24")  (not used for blocking)
SCORING_IPS=()   # not used for blocking; left for logging/notes
# Splunk ports
SPLUNK_WEB_PORT=8000
SPLUNK_MGMT_PORT=8089    # will be bound to localhost only
# -------------------------------------------------------

TS="$(date +%Y%m%d_%H%M%S)"
BACKUP_DIR="/root/ccdc_backups_${TS}"
mkdir -p "$BACKUP_DIR"

bkp(){ [ -f "$1" ] && cp -p "$1" "${BACKUP_DIR}/$(basename "$1").${TS}" || true; }
say(){ echo -e "[+] $*"; }
warn(){ echo -e "[-] $*" >&2; }

[ "$(id -u)" -eq 0 ] || { echo "ERROR: run as root"; exit 2; }

say "Backups -> $BACKUP_DIR"
for f in \
  /etc/selinux/config \
  /etc/ssh/sshd_config \
  /etc/security/limits.conf \
  /etc/login.defs \
  /etc/audit/rules.d/ccdc.rules \
  "${SPLUNK_HOME}/etc/system/local/server.conf" \
  "${SPLUNK_HOME}/etc/system/local/web.conf"
do bkp "$f"; done

# -------------------- SELinux --------------------
say "Enforcing SELinux"
sed -i 's/^SELINUX=.*/SELINUX=enforcing/' /etc/selinux/config || true
command -v setenforce >/dev/null 2>&1 && setenforce 1 || true
dnf -y install policycoreutils-python-utils setools-console >/dev/null 2>&1 || true

# -------------------- Disable SSH  --------------------
say "Disabling SSH service to reduce attack surface"
systemctl disable --now sshd 2>/dev/null || true
systemctl mask sshd 2>/dev/null || true

# -------------------- Splunk minimal TLS & bind mgmt localhost --------------------
if [ -d "${SPLUNK_HOME}" ]; then
  say "Configuring Splunk: splunkd (mgmt) -> localhost:${SPLUNK_MGMT_PORT}, SplunkWeb -> HTTPS ${SPLUNK_WEB_PORT}"
  mkdir -p "${SPLUNK_HOME}/etc/system/local"

  cat > "${SPLUNK_HOME}/etc/system/local/server.conf" <<'EOF'
[sslConfig]
enableSplunkdSSL = true
sslVersions = tls1.2, tls1.3
cipherSuite = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256
allowSslCompression = false

[general]
# Bind splunkd mgmt to loopback only for safety
mgmtHostPort = 127.0.0.1:8089
EOF

  cat > "${SPLUNK_HOME}/etc/system/local/web.conf" <<EOF
[settings]
enableSplunkWebSSL = true
httpport = ${SPLUNK_WEB_PORT}
EOF

  chown -R "${SPLUNK_USER}:${SPLUNK_GROUP}" "${SPLUNK_HOME}/etc/system/local"
  chmod -R go-rwx "${SPLUNK_HOME}/etc/system/local"
else
  warn "SPLUNK_HOME=${SPLUNK_HOME} not found; skipping Splunk config"
fi

  say "Restarting Splunk to apply new configuration"
  sudo -u "${SPLUNK_USER}" "${SPLUNK_HOME}/bin/splunk" restart || true

# -------------------- Firewalld: ensure Web port is open to all (no blocking) --------------------
if ! command -v firewall-cmd >/dev/null 2>&1; then
  warn "firewall-cmd missing; skipping firewall changes (assumes host firewall handled externally)"
else
  say "Ensuring Splunk Web port ${SPLUNK_WEB_PORT} is allowed to all (no IP blocking)"
  systemctl enable --now firewalld >/dev/null 2>&1 || true

  # Add service/port for web; do NOT add any drop rules or source restrictions.
  firewall-cmd --permanent --add-port=${SPLUNK_WEB_PORT}/tcp >/dev/null 2>&1 || true

  # Keep splunkd mgmt OFF the network by NOT opening 8089
  # (8089 is only configured to 127.0.0.1 via server.conf)

  firewall-cmd --reload >/dev/null 2>&1 || true

  say "firewalld summary (global):"
  firewall-cmd --list-all || true
fi

# -------------------- Audit rules (persistent) --------------------
say "Installing persistent audit rules"
mkdir -p /etc/audit/rules.d
cat > /etc/audit/rules.d/ccdc.rules <<EOF
# Splunk configs
-w ${SPLUNK_HOME}/etc/system/local/ -p wa -k splunk_config_changes
-w ${SPLUNK_HOME}/etc/apps/ -p wa -k splunk_app_changes
# Identity & auth
-w /etc/passwd -p wa -k user_changes
-w /etc/group  -p wa -k group_changes
-w /etc/shadow -p wa -k shadow_changes
-w /etc/sudoers -p wa -k sudoers_changes
# Command logging
-a exit,always -F arch=b64 -S execve -k command_log
-w /usr/bin/sudo -p x -k sudo_log
-w /bin/su -p x -k su_log
EOF

augenrules --load >/dev/null 2>&1 || true
systemctl enable --now auditd >/dev/null 2>&1 || true

# -------------------- AIDE --------------------
say "Setting up AIDE (first init may take a bit)"
dnf -y install aide >/dev/null 2>&1 || true
if ! [ -f /var/lib/aide/aide.db.gz ]; then
  aide --init >/dev/null 2>&1 || true
  [ -f /var/lib/aide/aide.db.new.gz ] && mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
fi
install -d -m 0750 /var/log/aide
sudo tee /usr/local/bin/check_integrity >/dev/null <<'EOF'
#!/usr/bin/env bash
set -euo pipefail
ts="$(date +%Y%m%d_%H%M%S)"
LOG_DIR="/var/log/aide"
mkdir -p "$LOG_DIR"

OUT="${LOG_DIR}/aide_check_${ts}.log"
SUMMARY="${LOG_DIR}/aide_summary_${ts}.txt"

# Run AIDE check; keep exit code
set +e
aide --check | tee "$OUT"
rc=$?
set -e

# Summarize key counts (Added/Removed/Changed) for quick triage
grep -E '^(Added files:|Removed files:|Changed files:)' "$OUT" > "$SUMMARY" || true

# If anything changed, raise a syslog alert (visible in /var/log/messages and journalctl)
if [[ $rc -ne 0 ]]; then
  logger -p authpriv.alert -t AIDE "INTEGRITY ALERT: differences detected; see $OUT and $SUMMARY"
else
  logger -p authpriv.info -t AIDE "Integrity OK (no differences)."
fi

exit $rc
EOF
sudo chmod +x /usr/local/bin/check_integrity

chmod +x /usr/local/bin/check_integrity

say "Setting up AIDE cron job to run every 5 minutes"
/bin/cat > /etc/cron.d/aide-check <<EOF
*/15 * * * * root /usr/local/bin/check_integrity
EOF
chmod 0644 /etc/cron.d/aide-check


# -------------------- Splunk ulimits --------------------
say "Setting Splunk ulimits"
mkdir -p /etc/security/limits.d
cat > /etc/security/limits.d/splunk.conf <<EOF
${SPLUNK_USER} soft nofile 64000
${SPLUNK_USER} hard nofile 64000
${SPLUNK_USER} soft nproc  16000
${SPLUNK_USER} hard nproc  16000
EOF

# -------------------- Lightweight monitor --------------------
sudo tee /usr/local/bin/ccdc_monitor.sh >/dev/null <<'EOF'
#!/usr/bin/env bash
set -euo pipefail
LOG_DIR="/var/log/ccdc_monitoring"
mkdir -p "${LOG_DIR}"

# Allowed listening ports (protocol:port); 8000 is Splunk Web; 8089 is mgmt (localhost-only)
ALLOWED_PORTS=("tcp:8000" "tcp:8089")

while true; do
  TS="$(date +%Y%m%d_%H%M%S)"
  SNAP="${LOG_DIR}/status_${TS}.log"

  # Gather status snapshot
  {
    echo "=== System Status ${TS} ==="
    echo "== Splunk service =="
    systemctl is-active splunk && systemctl --no-pager status splunk || echo "SPLUNK NOT ACTIVE"
    echo

    echo "== Listening sockets =="
    ss -tulpen
    echo

    echo "== Recent system messages =="
    tail -n 100 /var/log/messages 2>/dev/null || true
  } > "$SNAP"

  # --- Alerts ---

  # 1) Splunk down?
  if ! systemctl is-active --quiet splunk; then
    logger -p daemon.crit -t CCDC "SPLUNK DOWN: service not active"
  fi

  # 2) 8089 must be bound only to 127.0.0.1
  # Extract all splunkd/mgmt listeners on 8089; ensure they are on 127.0.0.1
  if ss -ltnp | awk '$4 ~ /:8089$/ {print $4}' | grep -q -v '^127\.0\.0\.1:'; then
    logger -p authpriv.alert -t CCDC "SECURITY: splunkd (8089) is listening on non-loopback!"
  fi

  # 3) Unexpected listeners (anything not in ALLOWED_PORTS)
  # Build allow regex
  ALLOW_RE="$(printf '%s\n' "${ALLOWED_PORTS[@]}" | sed 's#^#^#;s#:#.*:#;s#$#$#' | paste -sd'|' -)"
  # Get tcp listeners not loopback detail
  BAD_LISTEN="$(ss -ltnpH | awk '{print "tcp:"$4}' | grep -Ev '127\.0\.0\.1:' | grep -Ev "${ALLOW_RE:-^$}" || true)"
  if [[ -n "${BAD_LISTEN}" ]]; then
    logger -p authpriv.warning -t CCDC "UNEXPECTED LISTENERS: ${BAD_LISTEN}"
  fi

  # 4) If AIDE recently flagged differences, echo a reminder (optional: look at last 10 minutes)
  LAST_AIDE="$(ls -1t /var/log/aide/aide_summary_*.txt 2>/dev/null | head -1 || true)"
  if [[ -n "$LAST_AIDE" ]] && grep -qv "Changed files: 0" "$LAST_AIDE"; then
    logger -p authpriv.alert -t CCDC "AIDE: Integrity differences detected recently. See $LAST_AIDE"
  fi

  sleep 300
done
EOF
sudo chmod +x /usr/local/bin/ccdc_monitor.sh
sudo systemctl restart ccdc-monitor


cat > /etc/systemd/system/ccdc-monitor.service <<'EOF'
[Unit]
Description=CCDC Monitoring Service
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/ccdc_monitor.sh
Restart=always

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable --now ccdc-monitor >/dev/null 2>&1 || true

say "DONE: Splunk Web (${SPLUNK_WEB_PORT}) is reachable by any IP (no blocking)."
say "Backups: ${BACKUP_DIR}"
echo
echo "Quick verify commands:"
echo "  getenforce"
echo "  firewall-cmd --list-all"
echo "  ss -tulpen | egrep ':${SPLUNK_WEB_PORT}|:${SPLUNK_MGMT_PORT}'"
echo "  sudo -u ${SPLUNK_USER} ${SPLUNK_HOME}/bin/splunk status || true"

exit 0
